import 'dotenv/config';
import { sequelize } from '../models/sequelizeClient.js';
import { User, Book, Author,Category,Mark } from '../models/associations.js';
import booksData from './booksData.js';

console.log("üîÑ blablabook seeding started...");

// Cr√©ation des auteurs et des livres en seule lot (batch/bulk)
async function seedAuthors() {
  try {
    await Author.bulkCreate([
      {
        firstname: "Albert",
        lastname: "Camus",
        biography: "Albert Camus √©tait un √©crivain, philosophe et journaliste fran√ßais, prix Nobel de litt√©rature.",
        // Utilise le tableau de 20 livres issus de booksData pour cet auteur.
        Books: booksData,
      },
      // Vous pouvez ajouter d'autres auteurs ici si n√©cessaire
    ], { include: [Book] }); // On inclut le mod√®le Book pour cr√©er les enregistrements associ√©s

    console.log("Les auteurs et leurs livres ont √©t√© ajout√©s avec succ√®s !");
    process.exit(0);
  } catch (error) {
    console.error("Erreur lors du seed des auteurs et livres :", error);
    process.exit(1);
  }
}

seedAuthors();
// await Author.bulkCreate([
//   {
//     firstname: "Albert",
//     lastname: "Camus",
//     biography: "Albert Camus √©tait un √©crivain, philosophe et journaliste fran√ßais, prix Nobel de litt√©rature.",
//     Books: [
//       {
//         title: "L'√âtranger",
//         summary: "Un roman philosophique qui explore l'absurdit√© de la condition humaine.",
//         published_date: "1942-06-01",
//         image: "https://images.unsplash.com/photo-1544947950-fa07a98d237f?auto=format&fit=crop&q=80&w=400",
//         status: "lu",
//         availability: false
//       }
//     ]
//   },
//   {
//     firstname: "Antoine",
//     lastname: "de Saint-Exup√©ry",
//     biography: "Antoine de Saint-Exup√©ry √©tait un aviateur et √©crivain fran√ßais, auteur du Petit Prince.",
//     Books: [
//       {
//         title: "Le Petit Prince",
//         summary: "Une histoire intemporelle sur l'amour, l'amiti√© et la vie.",
//         published_date: "1943-04-06",
//         image: "https://images.unsplash.com/photo-1543002588-bfa74002ed7e?auto=format&fit=crop&q=80&w=400",
//         status: "√† lire",
//         availability: false
//       }
//     ]
//   },
//   {
//     firstname: "Victor",
//     lastname: "Hugo",
//     biography: "Victor Hugo est l'un des plus grands √©crivains fran√ßais, auteur de Les Mis√©rables et Notre-Dame de Paris.",
//     Books: [
//       {
//         title: "Les Mis√©rables",
//         summary: "Une fresque √©pique sur la lutte pour la justice et la r√©demption.",
//         published_date: "1862-01-01",
//         image: "https://images.unsplash.com/photo-1476275466078-4007374efbbe?auto=format&fit=crop&q=80&w=400",
//         status: "lu",
//         availability: false
//       },
//       {
//         title: "Notre-Dame de Paris",
//         summary: "Une histoire tragique se d√©roulant autour de la cath√©drale de Paris.",
//         published_date: "1831-03-16",
//         image: "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?auto=format&fit=crop&q=80&w=400",
//         status: "√† lire",
//         availability: false
//       }
//     ]
//   },
//   {
//     firstname: "Gustave",
//     lastname: "Flaubert",
//     biography: "Gustave Flaubert √©tait un romancier fran√ßais c√©l√®bre pour son ≈ìuvre Madame Bovary.",
//     Books: [
//       {
//         title: "Madame Bovary",
//         summary: "L'histoire tragique d'une femme prisonni√®re de ses r√™ves et de ses d√©sillusions.",
//         published_date: "1857-12-01",
//         image: "https://images.unsplash.com/photo-1512820790803-83ca734da794?auto=format&fit=crop&q=80&w=400",
//         status: "en cours",
//         availability: false
//       }
//     ]
//   },
//   {
//     firstname: "Charles",
//     lastname: "Baudelaire",
//     biography: "Charles Baudelaire √©tait un po√®te fran√ßais, c√©l√®bre pour son recueil Les Fleurs du Mal.",
//     Books: [
//       {
//         title: "Les Fleurs du Mal",
//         summary: "Une collection de po√®mes explorant la beaut√© et la d√©cadence.",
//         published_date: "1857-06-01",
//         image: "https://images.unsplash.com/photo-1544947950-fa07a98d237f?auto=format&fit=crop&q=80&w=400",
//         status: "en cours",
//         availability: false
//       }
//     ]
//   }
// ], { include: Book });

// console.log("Les auteurs et leurs livres ont √©t√© ajout√©s avec succ√®s !");



async function CreateCategory() {
    await Category.create({ name: 'Philosophie' });
    await Category.create({ name: 'Litt√©rature jeunesse' });
    await Category.create({ name: 'Science-fiction' });
    await Category.create({ name: 'Roman historique' });
    await Category.create({ name: 'Fantastique' });
    await Category.create({ name: 'Po√©sie' });
    await Category.create({name : 'Roman r√©aliste'});
    await Category.create({name : 'Roman gothique'});

    console.log("Donn√©es ajout√©es dans la table Category.");
}

await CreateCategory();


// Fonction asynchrone ui permet d'associer une cat√©gorie √† un livre
async function addCategoryToBook(bookTitle, categoryName) {
  //On recherche un livre en BDD en fonction de son titre
  const book = await Book.findOne({ where: { title: bookTitle } });
  //On recherche la cat√©gorie een BDD en fonction de son nom
  const category = await Category.findOne({ where: { name: categoryName } });

  // On v√©rifie que les 2 entit√©s existent avant d'√©tablir la l'association
  if (book && category) {
    //On ajoute la cat√©gorie du livre  via la relation d√©finie par Sequelize
    await book.addCategory(category);
    console.log(`La cat√©gorie "${categoryName}" a √©t√© associ√©e au livre "${bookTitle}".`);
  } else {
    // On affiche un message d'erreur si le livre ou la cat√©gorie n'existe pas.
    if (!book) console.log(`Le livre "${bookTitle}" n'a pas √©t√© trouv√©.`);
    if (!category) console.log(`La cat√©gorie "${categoryName}" n'a pas √©t√© trouv√©e.`);
  }
}

// Exemple d'association de livres √† des cat√©gories
await addCategoryToBook("L'√âtranger", "Philosophie");
await addCategoryToBook("Le Petit Prince", "Litt√©rature jeunesse");
await addCategoryToBook("Les Mis√©rables", "Roman historique");
await addCategoryToBook("Les Fleurs du Mal", "Po√©sie");
await addCategoryToBook("Notre-Dame de Paris","Roman gothique");
await addCategoryToBook("Madame Bovary", "Roman r√©aliste");

  async function CreateUser() {

      await User.create({ username: 'booklover92', firstname: 'Alice', lastname: 'Dupont', email: 'alice.dupont@example.com', password: 'securepass1', biography: 'Amoureuse des livres depuis toujours.' });
      await User.create({ username: 'readaholic21', firstname: 'Bob', lastname: 'Martin', email: 'bob.martin@example.com', password: 'securepass2', biography: 'Explorateur de mondes litt√©raires.' });
      await User.create({ username: 'pagewanderer', firstname: 'Charlie', lastname: 'Durand', email: 'charlie.durand@example.com', password: 'securepass3', biography: '√Ä la recherche du prochain chef-d\'≈ìuvre.' });
      await User.create({ username: 'literarymind', firstname: 'Diana', lastname: 'Blanc', email: 'diana.blanc@example.com', password: 'securepass4', biography: 'Po√©sie et philosophie sont mes passions.' });
  
      console.log("Donn√©es ajout√©es dans la table User.");
     
  }
  
  await CreateUser();
  // Fonction asynchrone qui permet d'associer un livre et un utilisateur
  async function addBookToUser(username, bookTitle) {
    //On recherche  l'utilisateur en BDD en fonction de son nom d'utilisateur
    const user = await User.findOne({ where: { username: username } })
    if (!user){ console.log(`L'utilisateur "${username}" n'a pas √©t√© trouv√©.`);
    return;
  }
      // On recherhe le livre en BDD en fonction de n titre
      const book = await Book.findOne({ where: { title: bookTitle } });
      //On v√©rifie que l'utilisateur et le livre existent avant d'√©tablir leur association
      if (user && book) {
        //On ajoute le livre √† l'utilisateur via la relation d√©finie par Sequelize
        await user.addBook(book);
        console.log(`Le livre "${bookTitle}" a √©t√© associ√© √† l'utilisateur "${username}".`);
      } else {
    }
      //On affiche un message d'erreur si l'utilisateur ou le livre n'existe pas .
      
      if (!book) console.log(`Le livre "${bookTitle}" n'a pas √©t√© trouv√©.`);
    }
  

 // association de livres √† des utilisateurs
await addBookToUser("booklover92", "L'√âtranger");
await addBookToUser("booklover92", "Le Petit Prince");
await addBookToUser("readaholic21", "Les Mis√©rables");
await addBookToUser("readaholic21", "Notre-Dame de Paris");
await addBookToUser("pagewanderer", "Madame Bovary");
await addBookToUser("pagewanderer", "Les Fleurs du Mal");
await addBookToUser("literarymind", "Les Fleurs du Mal");
await addBookToUser("literarymind", "L'√âtranger");

async function addMarkToBook(bookTitle, username, rating, review) {
 
    const book = await Book.findOne({ where: { title: bookTitle } });
    const user = await User.findOne({ where: { username: username } });

    if (book && user) {
      // V√©rification pr√©alable de l'existence de la note
      const existingMark = await Mark.findOne({ where: { UserId: user.id, BookId: book.id } });

      if (existingMark) {
        console.log(`Une note existe d√©j√† pour le livre "${bookTitle}" par l'utilisateur "${username}".`);
        return;
      }

      const markData = {
        rating: rating,
        UserId: user.id,
        BookId: book.id,
      };

      if (review) {
        markData.review = review; // Ajout de la review seulement si elle est d√©finie
      }

      await Mark.create(markData);
      console.log(`La note de ${rating} a √©t√© ajout√©e pour le livre "${bookTitle}" par l'utilisateur "${username}".`);
    } else {
      if (!book) console.log(`Le livre "${bookTitle}" n'a pas √©t√© trouv√©.`);
      if (!user) console.log(`L'utilisateur "${username}" n'a pas √©t√© trouv√©.`);
    }
 
}

// 
await addMarkToBook("L'√âtranger", "booklover92", 5); // Sans review
await addMarkToBook("Le Petit Prince", "readaholic21", 4, "Une aventure po√©tique magnifique."); // Avec review
await addMarkToBook("Madame Bovary", "pagewanderer", 3, "Bien √©crit mais un peu long.");
await addMarkToBook("Les Fleurs du Mal", "literarymind", 5, "Des po√®mes captivants.");

console.log("‚úÖ blablabook seed done with success !");
  
console.log("üßπ Clean up by closing database connexion");
await sequelize.close();

/*
const featuredBooks = [
  {
    title: "L'√âtranger",
    summary: "Un roman philosophique qui explore l'absurdit√© de la condition humaine.",
    published_date: "1942-06-01",
    image: "https://images.unsplash.com/photo-1544947950-fa07a98d237f?auto=format&fit=crop&q=80&w=400",
    status: "lu",
    availability: true
  },
  {
    title: "Le Petit Prince",
    summary: "Une histoire intemporelle sur l'amour, l'amiti√© et la vie.",
    published_date: "1943-04-06",
    image: "https://images.unsplash.com/photo-1543002588-bfa74002ed7e?auto=format&fit=crop&q=80&w=400",
    status: "√† lire",
    availability: true
  },
  {
    title: "Madame Bovary",
    summary: "L'histoire tragique d'une femme prisonni√®re de ses r√™ves et de ses d√©sillusions.",
    published_date: "1857-12-01",
    image: "https://images.unsplash.com/photo-1512820790803-83ca734da794?auto=format&fit=crop&q=80&w=400",
    status: "en cours",
    availability: false
  },
  {
    title: "Les Mis√©rables",
    summary: "Une fresque √©pique sur la lutte pour la justice et la r√©demption.",
    published_date: "1862-01-01",
    image: "https://images.unsplash.com/photo-1476275466078-4007374efbbe?auto=format&fit=crop&q=80&w=400",
    status: "lu",
    availability: true
  },
  {
    title: "Notre-Dame de Paris",
    summary: "Une histoire tragique se d√©roulant autour de la cath√©drale de Paris.",
    published_date: "1831-03-16",
    image: "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?auto=format&fit=crop&q=80&w=400",
    status: "√† lire",
    availability: true
  },
  {
    title: "Les Fleurs du Mal",
    summary: "Une collection de po√®mes explorant la beaut√© et la d√©cadence.",
    published_date: "1857-06-01",
    image: "https://images.unsplash.com/photo-1544947950-fa07a98d237f?auto=format&fit=crop&q=80&w=400",
    status: "en cours",
    availability: true
  }
];

*/ 

/*
const authors = [
  {
    firstname: "Albert",
    lastname: "Camus",
    biography: "Albert Camus est un √©crivain, philosophe et journaliste fran√ßais, laur√©at du prix Nobel de litt√©rature en 1957."
  },
  {
    firstname: "Antoine",
    lastname: "de Saint-Exup√©ry",
    biography: "Antoine de Saint-Exup√©ry est un √©crivain, po√®te et aviateur fran√ßais, c√©l√®bre pour son ≈ìuvre intemporelle 'Le Petit Prince'."
  },
  {
    firstname: "Gustave",
    lastname: "Flaubert",
    biography: "Gustave Flaubert est un √©crivain fran√ßais du XIXe si√®cle, consid√©r√© comme un ma√Ætre du r√©alisme, auteur de 'Madame Bovary'."
  },
  {
    firstname: "Victor",
    lastname: "Hugo",
    biography: "Victor Hugo est un √©crivain, po√®te et homme politique fran√ßais, auteur embl√©matique de 'Les Mis√©rables' et 'Notre-Dame de Paris'."
  },
  {
    firstname: "Charles",
    lastname: "Baudelaire",
    biography: "Charles Baudelaire est un po√®te fran√ßais c√©l√®bre pour sa collection de po√®mes 'Les Fleurs du Mal', qui a marqu√© la litt√©rature moderne."
  }
];
 */

/*
const categories = [
  {
    name: "Philosophie" // Correspond √† "L'√âtranger"
  },
  {
    name: "Litt√©rature jeunesse" // Correspond √† "Le Petit Prince"
  },
  {
    name: "Roman r√©aliste" // Correspond √† "Madame Bovary"
  },
  {
    name: "Roman historique" // Correspond √† "Les Mis√©rables"
  },
  {
    name: "Roman gothique" // Correspond √† "Notre-Dame de Paris"
  },
  {
    name: "Po√©sie" // Correspond √† "Les Fleurs du Mal"
  }
];

*/ 

/*
const users = [
  {
    username: "booklover92",
    firstname: "Alice",
    lastname: "Martin",
    email: "alice.martin@example.com",
    password: "securePassword123",
    biography: "Passionn√©e par la litt√©rature classique et les romans philosophiques."
  },
  {
    username: "readaholic21",
    firstname: "John",
    lastname: "Doe",
    email: "john.doe@example.com",
    password: "superSecret456",
    biography: "Amateur de science-fiction et d'histoires captivantes."
  },
  {
    username: "pagewanderer",
    firstname: "Emma",
    lastname: "Dupont",
    email: "emma.dupont@example.com",
    password: "readingForever789",
    biography: "Je voyage dans le temps et l'espace √† travers mes lectures."
  },
  {
    username: "literarymind",
    firstname: "Lucas",
    lastname: "Bernard",
    email: "lucas.bernard@example.com",
    password: "classicBooks321",
    biography: "Les chefs-d'≈ìuvre litt√©raires sont ma v√©ritable passion."
  }
];

*/ 

/*
const marks = [
  {
    rating: 5,
    review: "Un chef-d'≈ìuvre intemporel qui invite √† r√©fl√©chir sur l'existence.",
    UserId: 1, // Correspond √† l'utilisateur booklover92
    BookId: 1  // Correspond √† "L'√âtranger"
  },
  {
    rating: 4,
    review: "Une magnifique aventure po√©tique et philosophique.",
    UserId: 2, // Correspond √† l'utilisateur readaholic21
    BookId: 2  // Correspond √† "Le Petit Prince"
  },
  {
    rating: 3,
    review: "Un roman bien √©crit mais un peu long pour moi.",
    UserId: 3, // Correspond √† l'utilisateur pagewanderer
    BookId: 4  // Correspond √† "Les Mis√©rables"
  },
  {
    rating: 5,
    review: "Des po√®mes d'une beaut√© envo√ªtante.",
    UserId: 4, // Correspond √† l'utilisateur literarymind
    BookId: 6  // Correspond √† "Les Fleurs du Mal"
  }
];
*/

/*

const library = [
  {
    UserId: 1, // booklover92
    BookId: 1  // "L'√âtranger"
  },
  {
    UserId: 2, // readaholic21
    BookId: 2  // "Le Petit Prince"
  },
  {
    UserId: 3, // pagewanderer
    BookId: 4  // "Les Mis√©rables"
  },
  {
    UserId: 4, // literarymind
    BookId: 6  // "Les Fleurs du Mal"
  }
];

*/ 

/*
const bookHasCategory = [
  {
    BookId: 1, // "L'√âtranger"
    CategoryId: 1 // "Philosophie"
  },
  {
    BookId: 2, // "Le Petit Prince"
    CategoryId: 2 // "Litt√©rature jeunesse"
  },
  {
    BookId: 4, // "Les Mis√©rables"
    CategoryId: 4 // "Roman historique"
  },
  {
    BookId: 6, // "Les Fleurs du Mal"
    CategoryId: 6 // "Po√©sie"
  }
];

 */