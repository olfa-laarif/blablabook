import 'dotenv/config';
import { sequelize } from '../models/sequelizeClient.js';
import { User, Book, Author,Category,Mark } from '../models/associations.js';


console.log("üîÑ blablabook seeding started...");


await Author.bulkCreate([
  {
    firstname: "Albert",
    lastname: "Camus",
    biography: "Albert Camus √©tait un √©crivain, philosophe et journaliste fran√ßais, prix Nobel de litt√©rature.",
    Books: [
      {
        title: "L'√âtranger",
        summary: "Un roman philosophique qui explore l'absurdit√© de la condition humaine.",
        published_date: "1942-06-01",
        image: "https://images.unsplash.com/photo-1544947950-fa07a98d237f?auto=format&fit=crop&q=80&w=400",
        status: "lu",
        availability: false
      }
    ]
  },
  {
    firstname: "Antoine",
    lastname: "de Saint-Exup√©ry",
    biography: "Antoine de Saint-Exup√©ry √©tait un aviateur et √©crivain fran√ßais, auteur du Petit Prince.",
    Books: [
      {
        title: "Le Petit Prince",
        summary: "Une histoire intemporelle sur l'amour, l'amiti√© et la vie.",
        published_date: "1943-04-06",
        image: "https://images.unsplash.com/photo-1543002588-bfa74002ed7e?auto=format&fit=crop&q=80&w=400",
        status: "√† lire",
        availability: false
      }
    ]
  },
  {
    firstname: "Victor",
    lastname: "Hugo",
    biography: "Victor Hugo est l'un des plus grands √©crivains fran√ßais, auteur de Les Mis√©rables et Notre-Dame de Paris.",
    Books: [
      {
        title: "Les Mis√©rables",
        summary: "Une fresque √©pique sur la lutte pour la justice et la r√©demption.",
        published_date: "1862-01-01",
        image: "https://images.unsplash.com/photo-1476275466078-4007374efbbe?auto=format&fit=crop&q=80&w=400",
        status: "lu",
        availability: false
      },
      {
        title: "Notre-Dame de Paris",
        summary: "Une histoire tragique se d√©roulant autour de la cath√©drale de Paris.",
        published_date: "1831-03-16",
        image: "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?auto=format&fit=crop&q=80&w=400",
        status: "√† lire",
        availability: false
      }
    ]
  },
  {
    firstname: "Gustave",
    lastname: "Flaubert",
    biography: "Gustave Flaubert √©tait un romancier fran√ßais c√©l√®bre pour son ≈ìuvre Madame Bovary.",
    Books: [
      {
        title: "Madame Bovary",
        summary: "L'histoire tragique d'une femme prisonni√®re de ses r√™ves et de ses d√©sillusions.",
        published_date: "1857-12-01",
        image: "https://images.unsplash.com/photo-1512820790803-83ca734da794?auto=format&fit=crop&q=80&w=400",
        status: "en cours",
        availability: false
      }
    ]
  },
  {
    firstname: "Charles",
    lastname: "Baudelaire",
    biography: "Charles Baudelaire √©tait un po√®te fran√ßais, c√©l√®bre pour son recueil Les Fleurs du Mal.",
    Books: [
      {
        title: "Les Fleurs du Mal",
        summary: "Une collection de po√®mes explorant la beaut√© et la d√©cadence.",
        published_date: "1857-06-01",
        image: "https://images.unsplash.com/photo-1544947950-fa07a98d237f?auto=format&fit=crop&q=80&w=400",
        status: "en cours",
        availability: false
      }
    ]
  },
  {
    firstname: "Jean-Paul",
    lastname: "Sartre",
    biography: "Jean-Paul Sartre est un philosophe, dramaturge et √©crivain fran√ßais, figure de proue de l'existentialisme.",
    Books: [
      {
        title: "L'√ätre et le N√©ant",
        summary: "Un ouvrage philosophique majeur sur l'existentialisme et la libert√© humaine.",
        published_date: "1943-01-01",
        image: "https://images.unsplash.com/photo-1555685812-4b943f1cb0eb?auto=format&fit=crop&q=80&w=400",
        status: "√† lire",
        availability: true
      }
    ]
  },
  {
    firstname: "√âmile",
    lastname: "Zola",
    biography: "√âmile Zola est un √©crivain et journaliste fran√ßais, chef de file du naturalisme, connu pour sa s√©rie 'Les Rougon-Macquart'.",
    Books: [
      {
        title: "Germinal",
        summary: "Un roman r√©aliste d√©crivant la vie difficile des mineurs du XIXe si√®cle.",
        published_date: "1885-03-01",
        image: "https://images.unsplash.com/photo-1512820790803-83ca734da794?auto=format&fit=crop&q=80&w=400",
        status: "en cours",
        availability: false
      }
    ]
  },
  {
    firstname: "Marcel",
    lastname: "Proust",
    biography: "Marcel Proust est un √©crivain fran√ßais, auteur de l'≈ìuvre monumentale '√Ä la recherche du temps perdu'.",
    Books: [
      {
        title: "Du c√¥t√© de chez Swann",
        summary: "Le premier volume de '√Ä la recherche du temps perdu', o√π le narrateur explore ses souvenirs.",
        published_date: "1913-11-14",
        image: "https://images.unsplash.com/photo-1501594907352-04cda38ebc29?auto=format&fit=crop&q=80&w=400",
        status: "√† lire",
        availability: true
      }
    ]
  },
  {
    firstname: "Alexandre",
    lastname: "Dumas",
    biography: "Alexandre Dumas est un √©crivain fran√ßais, c√©l√®bre pour ses romans historiques comme 'Les Trois Mousquetaires' et 'Le Comte de Monte-Cristo'.",
    Books: [
      {
        title: "Le Comte de Monte-Cristo",
        summary: "Une aventure √©pique de vengeance et de justice.",
        published_date: "1844-08-28",
        image: "https://images.unsplash.com/photo-1512820790803-83ca734da794?auto=format&fit=crop&q=80&w=400",
        status: "lu",
        availability: false
      },
      {
        title: "Les Trois Mousquetaires",
        summary: "Un roman de cape et d'√©p√©e racontant les aventures de d'Artagnan et ses amis.",
        published_date: "1844-03-14",
        image: "https://images.unsplash.com/photo-1522143049013-2519756a52d4?auto=format&fit=crop&q=80&w=400",
        status: "√† lire",
        availability: true
      }
    ]
  },
  {
    firstname: "Stendhal",
    lastname: "",
    biography: "Stendhal, de son vrai nom Henri Beyle, est un √©crivain fran√ßais du XIXe si√®cle, connu pour 'Le Rouge et le Noir' et 'La Chartreuse de Parme'.",
    Books: [
      {
        title: "Le Rouge et le Noir",
        summary: "L'ascension sociale d'un jeune homme ambitieux dans la soci√©t√© fran√ßaise du XIXe si√®cle.",
        published_date: "1830-11-01",
        image: "https://images.unsplash.com/photo-1476275466078-4007374efbbe?auto=format&fit=crop&q=80&w=400",
        status: "lu",
        availability: false
      }
    ]
  },
  {
    firstname: "Moli√®re",
    lastname: "",
    biography: "Moli√®re, de son vrai nom Jean-Baptiste Poquelin, est un dramaturge et com√©dien fran√ßais du XVIIe si√®cle, ma√Ætre de la com√©die classique.",
    Books: [
      {
        title: "Le Malade Imaginaire",
        summary: "Une com√©die satirique sur la m√©decine et la soci√©t√©.",
        published_date: "1673-02-10",
        image: "https://images.unsplash.com/photo-1512820790803-83ca734da794?auto=format&fit=crop&q=80&w=400",
        status: "en cours",
        availability: true
      }
    ]
  }
], { include: Book });

console.log("Les auteurs et leurs livres ont √©t√© ajout√©s avec succ√®s !");



async function CreateCategory() {
  await Category.create({ name: 'Philosophie' });
  await Category.create({ name: 'Litt√©rature jeunesse' });
  await Category.create({ name: 'Science-fiction' });
  await Category.create({ name: 'Roman historique' });
  await Category.create({ name: 'Fantastique' });
  await Category.create({ name: 'Po√©sie' });
  await Category.create({ name: 'Roman r√©aliste' });
  await Category.create({ name: 'Roman gothique' });
  await Category.create({ name: 'Roman psychologique' });
  await Category.create({ name: 'Dystopie' });
  await Category.create({ name: 'Aventure' });
  await Category.create({ name: 'Roman √©pistolaire' });
  await Category.create({ name: 'Th√©√¢tre' });
  await Category.create({ name: 'Naturaliste' });

  console.log("Donn√©es ajout√©es dans la table Category.");
}

await CreateCategory();


// Fonction asynchrone ui permet d'associer une cat√©gorie √† un livre
async function addCategoryToBook(bookTitle, categoryName) {
  //On recherche un livre en BDD en fonction de son titre
  const book = await Book.findOne({ where: { title: bookTitle } });
  //On recherche la cat√©gorie een BDD en fonction de son nom
  const category = await Category.findOne({ where: { name: categoryName } });

  // On v√©rifie que les 2 entit√©s existent avant d'√©tablir la l'association
  if (book && category) {
    //On ajoute la cat√©gorie du livre  via la relation d√©finie par Sequelize
    await book.addCategory(category);
    console.log(`La cat√©gorie "${categoryName}" a √©t√© associ√©e au livre "${bookTitle}".`);
  } else {
    // On affiche un message d'erreur si le livre ou la cat√©gorie n'existe pas.
    if (!book) console.log(`Le livre "${bookTitle}" n'a pas √©t√© trouv√©.`);
    if (!category) console.log(`La cat√©gorie "${categoryName}" n'a pas √©t√© trouv√©e.`);
  }
}



async function addCategoriesToBooks() {
  await addCategoryToBook("L'√âtranger", "Philosophie");
  await addCategoryToBook("Le Petit Prince", "Litt√©rature jeunesse");
  await addCategoryToBook("Les Mis√©rables", "Roman historique");
  await addCategoryToBook("Les Fleurs du Mal", "Po√©sie");
  await addCategoryToBook("Notre-Dame de Paris", "Roman gothique");
  await addCategoryToBook("Madame Bovary", "Roman r√©aliste");
  await addCategoryToBook("Vingt Mille Lieues sous les mers", "Science-fiction");
  await addCategoryToBook("Le Comte de Monte-Cristo", "Roman historique");
  await addCategoryToBook("Les Trois Mousquetaires", "Aventure");
  await addCategoryToBook("√Ä la recherche du temps perdu", "Roman psychologique");
  await addCategoryToBook("Le Rouge et le Noir", "Roman psychologique");
  await addCategoryToBook("L'Assommoir", "Dystopie");
  await addCategoryToBook("Germinal", "Roman r√©aliste");
  await addCategoryToBook("Les Liaisons dangereuses", "Roman √©pistolaire");
  await addCategoryToBook("Le Tour du monde en 80 jours", "Aventure");
  await addCategoryToBook("Tartuffe", "Th√©√¢tre");
  await addCategoryToBook("Le Malade imaginaire", "Th√©√¢tre");
}

await addCategoriesToBooks();
console.log("Les cat√©gories ont √©t√© associ√©es aux livres avec succ√®s !");


  async function CreateUser() {

      await User.create({ username: 'booklover92', firstname: 'Alice', lastname: 'Dupont', email: 'alice.dupont@example.com', password: 'securepass1', biography: 'Amoureuse des livres depuis toujours.' });
      await User.create({ username: 'readaholic21', firstname: 'Bob', lastname: 'Martin', email: 'bob.martin@example.com', password: 'securepass2', biography: 'Explorateur de mondes litt√©raires.' });
      await User.create({ username: 'pagewanderer', firstname: 'Charlie', lastname: 'Durand', email: 'charlie.durand@example.com', password: 'securepass3', biography: '√Ä la recherche du prochain chef-d\'≈ìuvre.' });
      await User.create({ username: 'literarymind', firstname: 'Diana', lastname: 'Blanc', email: 'diana.blanc@example.com', password: 'securepass4', biography: 'Po√©sie et philosophie sont mes passions.' });
  
      console.log("Donn√©es ajout√©es dans la table User.");
  }
  
  await CreateUser();
  // Fonction asynchrone qui permet d'associer un livre et un utilisateur
  async function addBookToUser(username, bookTitle) {
    //On recherche  l'utilisateur en BDD en fonction de son nom d'utilisateur
    const user = await User.findOne({ where: { username: username } })
    if (!user){ console.log(`L'utilisateur "${username}" n'a pas √©t√© trouv√©.`);
    return;
  }
      // On recherhe le livre en BDD en fonction de n titre
      const book = await Book.findOne({ where: { title: bookTitle } });
      //On v√©rifie que l'utilisateur et le livre existent avant d'√©tablir leur association
      if (user && book) {
        //On ajoute le livre √† l'utilisateur via la relation d√©finie par Sequelize
        await user.addBook(book);
        console.log(`Le livre "${bookTitle}" a √©t√© associ√© √† l'utilisateur "${username}".`);
      } else {
    }
      //On affiche un message d'erreur si l'utilisateur ou le livre n'existe pas .
      
      if (!book) console.log(`Le livre "${bookTitle}" n'a pas √©t√© trouv√©.`);
    }
  


async function assignBooksToUsers() {
  await addBookToUser("booklover92", "L'√âtranger");
  await addBookToUser("booklover92", "Le Petit Prince");

  await addBookToUser("readaholic21", "Les Mis√©rables");
  await addBookToUser("readaholic21", "Notre-Dame de Paris");

  await addBookToUser("pagewanderer", "Madame Bovary");
  await addBookToUser("pagewanderer", "Les Fleurs du Mal");

  await addBookToUser("literarymind", "Les Fleurs du Mal");
  await addBookToUser("literarymind", "L'√âtranger");

  await addBookToUser("booklover92", "Vingt Mille Lieues sous les mers");
  await addBookToUser("readaholic21", "Le Comte de Monte-Cristo");

  await addBookToUser("pagewanderer", "Les Trois Mousquetaires");
  await addBookToUser("literarymind", "√Ä la recherche du temps perdu");

  await addBookToUser("booklover92", "Le Rouge et le Noir");
  await addBookToUser("readaholic21", "L'Assommoir");

  await addBookToUser("pagewanderer", "Germinal");
  await addBookToUser("literarymind", "Les Liaisons dangereuses");

  await addBookToUser("booklover92", "Le Tour du monde en 80 jours");
  await addBookToUser("readaholic21", "Tartuffe");

  await addBookToUser("pagewanderer", "Le Malade imaginaire");
}

await assignBooksToUsers();
console.log("Les livres ont √©t√© associ√©s aux utilisateurs avec succ√®s !");


async function addMarkToBook(bookTitle, username, rating, review) {
 
    const book = await Book.findOne({ where: { title: bookTitle } });
    const user = await User.findOne({ where: { username: username } });

    if (book && user) {
      // V√©rification pr√©alable de l'existence de la note
      const existingMark = await Mark.findOne({ where: { UserId: user.id, BookId: book.id } });

      if (existingMark) {
        console.log(`Une note existe d√©j√† pour le livre "${bookTitle}" par l'utilisateur "${username}".`);
        return;
      }

      const markData = {
        rating: rating,
        UserId: user.id,
        BookId: book.id,
      };

      if (review) {
        markData.review = review; // Ajout de la review seulement si elle est d√©finie
      }

      await Mark.create(markData);
      console.log(`La note de ${rating} a √©t√© ajout√©e pour le livre "${bookTitle}" par l'utilisateur "${username}".`);
    } else {
      if (!book) console.log(`Le livre "${bookTitle}" n'a pas √©t√© trouv√©.`);
      if (!user) console.log(`L'utilisateur "${username}" n'a pas √©t√© trouv√©.`);
    }
 
}


async function assignReviewsToBooks() {
  await addMarkToBook("L'√âtranger", "booklover92", 5); // Sans review
  await addMarkToBook("Le Petit Prince", "readaholic21", 4, "Une aventure po√©tique magnifique.");
  await addMarkToBook("Le Petit Prince", "pagewanderer", 5);
  await addMarkToBook("Madame Bovary", "pagewanderer", 3, "Bien √©crit mais un peu long.");
  await addMarkToBook("Les Fleurs du Mal", "literarymind", 5, "Des po√®mes captivants.");

  await addMarkToBook("Les Mis√©rables", "booklover92", 4, "Une ≈ìuvre monumentale.");
  await addMarkToBook("Notre-Dame de Paris", "readaholic21", 4, "Une histoire gothique fascinante.");
  await addMarkToBook("Le Comte de Monte-Cristo", "pagewanderer", 5, "Un roman d‚Äôaventure √©pique.");
  await addMarkToBook("√Ä la recherche du temps perdu", "literarymind", 3, "Un style riche mais exigeant.");

  await addMarkToBook("Les Trois Mousquetaires", "booklover92", 5, "Un classique du roman de cape et d‚Äô√©p√©e.");
  await addMarkToBook("Le Rouge et le Noir", "readaholic21", 4, "Un portrait psychologique intense.");
  await addMarkToBook("L'Assommoir", "pagewanderer", 3, "Un r√©alisme cru et poignant.");
  await addMarkToBook("Germinal", "literarymind", 5, "Un chef-d‚Äô≈ìuvre du naturalisme.");

  await addMarkToBook("Les Liaisons dangereuses", "booklover92", 4, "Manipulations et trahisons captivantes.");
  await addMarkToBook("Le Tour du monde en 80 jours", "readaholic21", 5, "Un voyage palpitant.");
  await addMarkToBook("Tartuffe", "pagewanderer", 4, "Une satire toujours d‚Äôactualit√©.");
  await addMarkToBook("Le Malade imaginaire", "literarymind", 3, "Un humour subtil et intelligent.");
}

await assignReviewsToBooks();
console.log("Les avis ont √©t√© ajout√©s avec succ√®s !");


console.log("‚úÖ blablabook seed done with success !");
  
console.log("üßπ Clean up by closing database connexion");
await sequelize.close();
